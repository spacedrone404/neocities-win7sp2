@font-face {
    font-family: 'amiga_topaz_unicode_rusRg';
    src: url('amiga-webfont.woff2') format('woff2'),
         url('amiga-webfont.woff') format('woff');
    font-weight: normal;
    font-style: normal;

}

html {
  scroll-behavior: smooth;
}

 *, body, a, a:hover {cursor: url("/img/cursor2.gif"), auto;}

.webarchive {
		background-color: black;
	}
	

.container {
  position: relative;
  width: 50%;
}

.overlay {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  background-color: #000000;
  overflow: hidden;
  width: 0;
  height: 100%;
  transition: .5s ease;
}

.container:hover .overlay {
  width: 100%;
}

.text {
  white-space: nowrap; 
  color: white;
  font-size: 20px;
  position: absolute;
  overflow: hidden;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  -ms-transform: translate(-50%, -50%);
}

	  
  body {
  background-color: #000000;
  background-image: url("/img/neo.gif");
	font-family:amiga_topaz_unicode_rusRg;
	}	
	
	p {
	color: white;
  opacity: 0.94;
	}
		
	p1 {
	color: white;
	font-family:amiga_topaz_unicode_rusRg;
	font-size:284%;
	opacity: 0.88;
	}
	
img {
  margin-left: auto;
  margin-right: auto;
  border: 2px solid white;
}

	pre {
	font-family:amiga_topaz_unicode_rusRg;
	color: #ffffff;
	}
	
	h1 {
	color:#ffffff;
	font-family:amiga_topaz_unicode_rusRg;
	font-size:200%;
	border: 4px solid grey;
	padding: 30px;
	margin: 10px;
	}
	
	h2 {
		color: white;
		background-color: #26cf89;
		border: 6px solid white;
		text-decoration: none;
		display: inline-block;
	}
	
	h3 {
	  color: white;
		background-color: #4d0099;
		border: 6px solid #ff0080;
		padding: 4px 7px;
		display: inline-block;
	}
	
		h4 {
	  color: white;
		background-color:#00134d;
		border: 2px solid #ff0080;
		padding: 4px 7px;
		display: inline-block;
	}
	
	a:link, a:visited {
		color: white;
		background-color: #002db3;
		padding: 5px 8px;
		text-align: center;
		text-decoration: none;
		border: 4px solid white;
		display: inline-block;
	}
	
	
	a:hover, a:active {
		
		background-color: #ff0080;
	}

	table {
		font-family:amiga_topaz_unicode_rusRg;
        border-collapse: collapse;
		border-spacing: 15px;
	
	}
	
	th {
		border: 2px solid #000000;
		text-align: center;
		padding: 5px;
	
	}
	
	td {
		border: 2px solid #000000;
		text-align: left;
		padding: 20px;
	
	}
	
	
	tr:nth-child(even) {
		background-color: #dddddd;
		
	}
	
	tr:nth-child(odd) {
		background-color: #34dddd;
		
	}	
	
	#various2  {
		background-color: #01f1c1;
			
	}
	
	
	#various2 tr:nth-child(even) {
		background-color: #11ffdd;
		
	}
	
	#various2 tr:nth-child(odd) {
		background-color: #fffd23;	
	}
	
	hr.top_line {
  border: 9px solid #ff0080;
}

li a {
	display: block;
	color: black;
	text-align: left;
	padding: 16px;
	text-decoration: none;
	background-color: blue;
}

li a:hover {
	background-color: #ff0077;
}


#app {
  background: transparent;
  height: 10vh;
  width: 100%;
  margin: 0;
  padding: 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  background-size: cover;
  background-position: center;
  z-index: 1;
}

#wrapper {
  text-align: center;
}

.sub {
  color: #64dcdc; 
}

/* Our mixin positions a copy of our text
directly on our existing text, while
also setting content to the appropriate
text set in the data-text attribute. */
.glitch {
  position: relative;
  color: white;
  font-size: 3em;
  letter-spacing: 0.1em;
  /* Animation provies a slight random skew. Check bottom of doc
  for more information on how to random skew. */
  animation: glitch-skew 1s infinite linear alternate-reverse;
}
.glitch::before {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: 2px;
  text-shadow: -2px 0 #ff00c1;
  /* Creates an initial clip for our glitch. This works in
  a typical top,right,bottom,left fashion and creates a mask
  to only show a certain part of the glitch at a time. */
  clip: rect(44px, 450px, 56px, 0);
  /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
  with an alternating animation to keep things fresh. */
  animation: glitch-anim 5s infinite linear alternate-reverse;
}
.glitch::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  left: -2px;
  text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
  animation: glitch-anim2 1s infinite linear alternate-reverse;
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
  0% {
    clip: rect(49px, 9999px, 86px, 0);
    transform: skew(0.01deg);
  }
  5% {
    clip: rect(37px, 9999px, 6px, 0);
    transform: skew(0.52deg);
  }
  10% {
    clip: rect(50px, 9999px, 62px, 0);
    transform: skew(0.29deg);
  }
  15% {
    clip: rect(62px, 9999px, 57px, 0);
    transform: skew(0.96deg);
  }
  20% {
    clip: rect(11px, 9999px, 77px, 0);
    transform: skew(0.86deg);
  }
  25% {
    clip: rect(22px, 9999px, 45px, 0);
    transform: skew(0.47deg);
  }
  30% {
    clip: rect(55px, 9999px, 87px, 0);
    transform: skew(0.56deg);
  }
  35% {
    clip: rect(88px, 9999px, 100px, 0);
    transform: skew(0.12deg);
  }
  40% {
    clip: rect(56px, 9999px, 66px, 0);
    transform: skew(0.72deg);
  }
  45% {
    clip: rect(69px, 9999px, 70px, 0);
    transform: skew(0.09deg);
  }
  50% {
    clip: rect(96px, 9999px, 46px, 0);
    transform: skew(0.79deg);
  }
  55% {
    clip: rect(8px, 9999px, 24px, 0);
    transform: skew(0.37deg);
  }
  60% {
    clip: rect(39px, 9999px, 71px, 0);
    transform: skew(0.06deg);
  }
  65% {
    clip: rect(85px, 9999px, 24px, 0);
    transform: skew(0.48deg);
  }
  70% {
    clip: rect(70px, 9999px, 70px, 0);
    transform: skew(0.04deg);
  }
  75% {
    clip: rect(82px, 9999px, 90px, 0);
    transform: skew(0.76deg);
  }
  80% {
    clip: rect(39px, 9999px, 28px, 0);
    transform: skew(0.24deg);
  }
  85% {
    clip: rect(24px, 9999px, 69px, 0);
    transform: skew(0.59deg);
  }
  90% {
    clip: rect(28px, 9999px, 35px, 0);
    transform: skew(0.05deg);
  }
  95% {
    clip: rect(69px, 9999px, 54px, 0);
    transform: skew(0.48deg);
  }
  100% {
    clip: rect(43px, 9999px, 82px, 0);
    transform: skew(0.94deg);
  }
}
@keyframes glitch-anim2 {
  0% {
    clip: rect(31px, 9999px, 88px, 0);
    transform: skew(0.53deg);
  }
  5% {
    clip: rect(93px, 9999px, 36px, 0);
    transform: skew(0.43deg);
  }
  10% {
    clip: rect(70px, 9999px, 47px, 0);
    transform: skew(0.34deg);
  }
  15% {
    clip: rect(10px, 9999px, 97px, 0);
    transform: skew(0.06deg);
  }
  20% {
    clip: rect(9px, 9999px, 88px, 0);
    transform: skew(0.53deg);
  }
  25% {
    clip: rect(13px, 9999px, 99px, 0);
    transform: skew(0.49deg);
  }
  30% {
    clip: rect(54px, 9999px, 15px, 0);
    transform: skew(0.39deg);
  }
  35% {
    clip: rect(30px, 9999px, 51px, 0);
    transform: skew(0.69deg);
  }
  40% {
    clip: rect(53px, 9999px, 75px, 0);
    transform: skew(0.15deg);
  }
  45% {
    clip: rect(15px, 9999px, 53px, 0);
    transform: skew(0.72deg);
  }
  50% {
    clip: rect(4px, 9999px, 54px, 0);
    transform: skew(0.85deg);
  }
  55% {
    clip: rect(50px, 9999px, 35px, 0);
    transform: skew(0.64deg);
  }
  60% {
    clip: rect(50px, 9999px, 98px, 0);
    transform: skew(0.38deg);
  }
  65% {
    clip: rect(3px, 9999px, 100px, 0);
    transform: skew(0.67deg);
  }
  70% {
    clip: rect(56px, 9999px, 60px, 0);
    transform: skew(0.87deg);
  }
  75% {
    clip: rect(32px, 9999px, 39px, 0);
    transform: skew(0.33deg);
  }
  80% {
    clip: rect(87px, 9999px, 62px, 0);
    transform: skew(0.4deg);
  }
  85% {
    clip: rect(47px, 9999px, 66px, 0);
    transform: skew(0.94deg);
  }
  90% {
    clip: rect(18px, 9999px, 66px, 0);
    transform: skew(0.48deg);
  }
  95% {
    clip: rect(45px, 9999px, 89px, 0);
    transform: skew(0.33deg);
  }
  100% {
    clip: rect(88px, 9999px, 84px, 0);
    transform: skew(0.25deg);
  }
}
@keyframes glitch-skew {
  0% {
    transform: skew(4deg);
  }
  10% {
    transform: skew(5deg);
  }
  20% {
    transform: skew(-2deg);
  }
  30% {
    transform: skew(3deg);
  }
  40% {
    transform: skew(4deg);
  }
  50% {
    transform: skew(1deg);
  }
  60% {
    transform: skew(-3deg);
  }
  70% {
    transform: skew(2deg);
  }
  80% {
    transform: skew(-4deg);
  }
  90% {
    transform: skew(-3deg);
  }
  100% {
    transform: skew(5deg);
  }
}
